apiVersion: apps/v1
kind: Deployment
metadata:
  name: powerdns-clients-as
  namespace: powerdns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: powerdns-clients-as
  template:
    metadata:
      labels:
        app: powerdns-clients-as
    spec:
      volumes:
      - name: sqlite3-db
        persistentVolumeClaim:
          claimName: powerdns-sqlite3-db
          readOnly: false
      - name: powerdns-clients-as
        configMap:
          name: powerdns-clients-as
          defaultMode: 420
      initContainers:
      - name: init-powerdns-clients-as
        image: docker.io/library/alpine:3.21
        command: [ "/bin/ash", "-c" ]
        args:
        - |
          while true; do
            if [ -f /var/lib/powerdns/pdns.sqlite3 ]; then
              echo "File exists, proceeding..."
              break
            else
              echo "File not found, sleeping..."
              sleep ${SLEEP_INTERVAL:-5}
            fi
          done
        volumeMounts:
        - mountPath: /var/lib/powerdns/
          name: sqlite3-db
          subPath: var-lib
      containers:
      - name: powerdns-clients-as
        image: docker.io/powerdns/pdns-auth-49:4.9.4
        env:
        - name: CI_JOB_ID # Useful for rolling the pod using a pipeline execution process
          valueFrom:
            secretKeyRef:
              name: as-secrets
              key: ci-job-id
        - name: PDNS_AUTH_API_KEY # This key/secret is shared across roles, you can define individuals secrets for roles
          valueFrom:
            secretKeyRef:
              name: as-secrets
              key: key
        ports:
        - containerPort: 5353
          protocol: UDP
        - containerPort: 5353
          protocol: TCP
        - containerPort: 8081 # webserver endpoint
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /var/lib/powerdns/
          name: sqlite3-db
          subPath: var-lib
        - mountPath: /etc/powerdns/pdns.d/pdns.conf
          name: powerdns-clients-as
          subPath: pdns.conf
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
