---
defaultPodOptions:
  automountServiceAccountToken: false
  enableServiceLinks: true
  restartPolicy: Always
  securityContext:
    fsGroup: 1000
    fsGroupChangePolicy: OnRootMismatch

controllers:
  api:
    enabled: true
    type: statefulset
    replicas: 1
    revisionHistoryLimit: 2
    initContainers:
      wait-for-db:
        image:
          repository: docker.io/library/busybox
          tag: "1.37"
        command:
          - sh
          - -c
          - |
            until nc -z -v -w30 db-rw.database.svc.cluster.local 5432
            do
              echo "Waiting for database connection..."
              sleep 5
            done
            echo "Database is up - continuing..."
      init-db:
        image:
          repository: ghcr.io/home-operations/postgres-init
          tag: "17.6"
        env:
          - name: INIT_POSTGRES_DBNAME
            value: forgejo
          - name: INIT_POSTGRES_HOST
            value: db-rw.database.svc.cluster.local
          - name: INIT_POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: db-superuser
                key: password
          - name: INIT_POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: forgejo-database-credentials
                key: username
          - name: INIT_POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: forgejo-database-credentials
                key: password
    containers:
      main:
        ports:
          - name: http
            containerPort: &apiWebPort 3000
            protocol: TCP
          - name: ssh
            containerPort: &apiSshPort 222
            protocol: TCP
        image:
          repository: harbor.cloud.danmanners.com/library/forgejo/forgejo
          tag: "13.0.1"
          pullPolicy: "IfNotPresent"
        securityContext:
          allowPrivilegeEscalation: false
        env:
          # Default Configuration
          - name: FORGEJO__SERVER__APP_NAME
            value: "Forgejo"
          # Server Configuration
          - name: FORGEJO__SERVER__APP_DATA_PATH
            value: "/data/forgejo"
          - name: FORGEJO__SERVER__PROTOCOL
            value: "http"
          - name: FORGEJO__SERVER__DOMAIN
            value: &domain "git.cloud.danmanners.com"
          - name: FORGEJO__SERVER__ROOT_URL
            value: "https://git.cloud.danmanners.com/"
          - name: FORGEJO__SERVER__HTTP_PORT
            value: 3000
          # - name: FORGEJO__SERVER__START_SSH_SERVER
          #   value: "true"
          # Repository Configuration
          - name: FORGEJO__REPOSITORY__ROOT
            value: "%(APP_DATA_PATH)s/gitea-repositories"
          # Database Configuration
          - name: FORGEJO__DATABASE__DB_TYPE
            value: "postgres"
          - name: FORGEJO__DATABASE__HOST
            value: "db-rw.database.svc.cluster.local:5432"
          - name: FORGEJO__DATABASE__NAME
            value: "forgejo"
          - name: FORGEJO__DATABASE__USER
            valueFrom:
              secretKeyRef:
                name: forgejo-database-credentials
                key: username
          - name: FORGEJO__DATABASE__PASSWD
            valueFrom:
              secretKeyRef:
                name: forgejo-database-credentials
                key: password
          # Indexer Configuration
          - name: MEILI_MASTER_KEY
            valueFrom:
              secretKeyRef:
                name: forgejo-meilisearch-credentials
                key: masterkey
          - name: FORGEJO__INDEXER__TYPE
            value: "meilisearch"
          - name: FORGEJO__INDEXER__ISSUE_INDEXER_CONN_STR
            value: "http://:$(MEILI_MASTER_KEY)@forgejo-meilisearch:7700"
          # Admin Configuration
          - name: FORGEJO__ADMIN__DEFAULT_EMAIL_NOTIFICATIONS
            value: "onmention"
          # OIDC and OAUTH2 Configuration
          - name: FORGEJO__OAUTH2_CLIENT__REGISTER_EMAIL_CONFIRM
            value: "disabled"
          - name: FORGEJO__OAUTH2_CLIENT__OPENID_CONNECT_SCOPES
            value: "email profile groups"
          - name: FORGEJO__OAUTH2_CLIENT__ENABLE_AUTO_REGISTRATION
            value: "true"
          - name: FORGEJO__OAUTH2_CLIENT__ACCOUNT_LINKING
            value: "auto"
          # Cache Configuration
          - name: FORGEJO__CACHE__ADAPTER
            value: "redis"
          - name: FORGEJO__CACHE__HOST
            value: "redis://forgejo-valkey.forgejo.svc.cluster.local:6379/0?pool_size=100&idle_timeout=180s"
          # Session Configuration
          - name: FORGEJO__SESSION__PROVIDER
            value: "db"
          # Git Configuration
          - name: FORGEJO__GIT__MAX_GIT_DIFF_FILES
            value: "200"
        resources:
          limits:
            cpu: 4
            memory: 8Gi
          requests:
            cpu: 500m
            memory: 2Gi
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              exec:
                command:
                  - curl
                  - -sI
                  - http://localhost:$(FORGEJO__SERVER__HTTP_PORT)
              initialDelaySeconds: 5
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes

  meilisearch:
    enabled: true
    type: deployment
    replicas: 1
    containers:
      main:
        ports:
          - name: http
            containerPort: 7700
            protocol: TCP
        image:
          repository: getmeili/meilisearch
          tag: "v1.12.3"
          pullPolicy: "IfNotPresent"
        securityContext:
          allowPrivilegeEscalation: false
        env:
          - name: MEILI_MASTER_KEY
            valueFrom:
              secretKeyRef:
                name: forgejo-meilisearch-credentials
                key: masterkey
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 250m
            memory: 512Mi

  valkey:
    enabled: true
    type: deployment
    replicas: 1
    containers:
      main:
        image:
          repository: docker.io/valkey/valkey
          tag: "alpine3.22"
          pullPolicy: "IfNotPresent"
        securityContext:
          allowPrivilegeEscalation: false
        ports:
          - name: redis
            containerPort: 6379
            protocol: TCP
        resources:
          limits:
            cpu: 1500m
            memory: 2Gi

service:
  api:
    enabled: true
    controller: api
    primary: true
    type: ClusterIP
    ports:
      http:
        enabled: true
        port: 80
        targetPort: http
        protocol: TCP

  ssh:
    enabled: true
    controller: api
    primary: false
    type: LoadBalancer
    annotations:
      lbipam.cilium.io/ips: 172.31.0.30
    ports:
      ssh:
        enabled: true
        port: 22
        targetPort: ssh
        protocol: TCP

  meilisearch:
    enabled: true
    controller: meilisearch
    primary: false
    type: ClusterIP
    ports:
      http:
        enabled: true
        port: 7700
        targetPort: http
        protocol: TCP

  valkey:
    enabled: true
    controller: valkey
    primary: false
    type: ClusterIP
    ports:
      redis:
        enabled: true
        port: 6379
        targetPort: redis
        protocol: TCP

  extname:
    enabled: true
    primary: false
    controller: api
    type: ExternalName
    externalName: unifi-home.homelab.danmanners.com
    annotations:
      external-dns.alpha.kubernetes.io/hostname: *domain
      external-dns.alpha.kubernetes.io/ttl: "300"

route:
  api:
    enabled: true
    kind: HTTPRoute
    annotations:
      external-dns.alpha.kubernetes.io/controller: "false"
      gatus.home-operations.com/enabled: "false"
      gatus.home-operations.com/endpoint: |-
        name: Forgejo
        conditions:
          - "[STATUS] == 200"
        url: https://git.cloud.danmanners.com/
        method: HEAD
    parentRefs:
      - kind: Gateway
        group: gateway.networking.k8s.io
        name: gwapi
        namespace: default
        sectionName: https-cloud
    hostnames:
      - git.cloud.danmanners.com
    rules:
      - backendRefs:
          - name: forgejo-api
            port: 80
            weight: 1
        matches:
          - path:
              type: PathPrefix
              value: /
        timeouts:
          backendRequest: 0s
          request: 0s

persistence:
  forgejo-app-data:
    enabled: true
    type: persistentVolumeClaim
    storageClass: ceph-block-retain
    accessMode: ReadWriteOnce
    size: 40Gi
    retain: true
    advancedMounts:
      api:
        main:
          - path: /data
            readOnly: false

  meilisearch-data:
    enabled: true
    type: persistentVolumeClaim
    storageClass: ceph-block-retain
    accessMode: ReadWriteOnce
    size: 20Gi
    retain: true
    advancedMounts:
      meilisearch:
        main:
          - path: /data/data.meilisearch
            readOnly: false
