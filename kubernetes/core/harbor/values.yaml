x-anchors:
  imageTag: &tagVersion v2.13.0
  storageClass: &storageClass ceph-block-retain
  storageAccessMode: &storageAccessMode ReadWriteOnce

externalURL: https://harbor.cloud.danmanners.com

expose:
  type: clusterIP
  tls:
    enabled: false # Gateway API and TLS ain't working so well :(
    certSource: none
    secret:
      secretName: "wildcard"
  clusterIP:
    name: harbor
    ports:
      httpPort: 80
      httpsPort: 443
  ingress:
    hosts:
      core: harbor.cloud.danmanners.com
      notary: notary.cloud.danmanners.com

persistence:
  enabled: true
  resourcePolicy: "keep"
  persistentVolumeClaim:
    registry:
      storageClass: *storageClass
      accessMode: *storageAccessMode
      size: 80Gi
    jobservice:
      jobLog:
        storageClass: *storageClass
        accessMode: *storageAccessMode
        size: 4Gi
    database:
      storageClass: *storageClass
      accessMode: *storageAccessMode
      size: 20Gi
    redis:
      storageClass: *storageClass
      accessMode: *storageAccessMode
      size: 4Gi
    trivy:
      storageClass: *storageClass
      accessMode: *storageAccessMode
      size: 20Gi
  imageChartStorage:
    disableredirect: false
    type: filesystem
    filesystem:
      rootdirectory: /storage

existingSecret: "harbor-service-secrets"
existingSecretAdminPassword: "harbor-service-secrets"
existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD

internalTLS:
  enabled: false
  certSource: "secret"
  core:
    secretName: harbor-core-internal-tls
  jobservice:
    secretName: harbor-jobservice-internal-tls
  registry:
    secretName: harbor-registry-internal-tls
  portal:
    secretName: harbor-portal-internal-tls
  trivy:
    secretName: harbor-trivy-internal-tls

ipFamily:
  ipv4:
    enabled: true
  ipv6:
    enabled: false

logLevel: info
imagePullPolicy: IfNotPresent
updateStrategy:
  type: RollingUpdate

enableMigrateHelmHook: false
metrics:
  enabled: false
trace:
  enabled: false

containerSecurityContext:
  privileged: false
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault
  runAsNonRoot: true

portal:
  image:
    repository: goharbor/harbor-portal
    tag: *tagVersion
  automountServiceAccountToken: false
  replicas: 1
  revisionHistoryLimit: 3

core:
  image:
    repository: goharbor/harbor-core
    tag: *tagVersion
  replicas: 1
  revisionHistoryLimit: 3
  startupProbe:
    enabled: true
    initialDelaySeconds: 10
  quotaUpdateProvider: db # Or redis
  secretName: harbor-token-ca-secret
  existingSecret: "harbor-service-secrets"
  existingSecretSecretKey: CORE_SECRET
  existingXsrfSecret: "harbor-service-secrets"
  existingXsrfSecretKey: CSRF_KEY
  gdpr:
    deleteUser: false
    auditLogsCompliant: false

jobservice:
  image:
    repository: goharbor/harbor-jobservice
    tag: *tagVersion
  automountServiceAccountToken: false
  replicas: 1
  revisionHistoryLimit: 3
  maxJobWorkers: 10
  loggerSweeperDuration: 7 #days
  notification:
    webhook_job_max_retry: 3
    webhook_job_http_client_timeout: 3 # in seconds
  reaper:
    max_update_hours: 12
    max_dangling_hours: 168
  existingSecret: "harbor-service-secrets"
  existingSecretKey: JOBSERVICE_SECRET

registry:
  registry:
    image:
      repository: goharbor/registry-photon
      tag: *tagVersion
  controller:
    image:
      repository: goharbor/harbor-registryctl
      tag: *tagVersion
  replicas: 1
  revisionHistoryLimit: 3
  existingSecret: "harbor-service-secrets"
  existingSecretKey: REGISTRY_HTPASSWD
  relativeurls: false
  credentials:
    existingSecret: "harbor-service-secrets"
  upload_purging:
    enabled: true
    age: 48h
    interval: 24h
    dryrun: false

trivy:
  enabled: true
  image:
    repository: goharbor/trivy-adapter-photon
    tag: *tagVersion
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  vulnType: "os,library"
  severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
  ignoreUnfixed: false
  insecure: false
  skipUpdate: false
  securityCheck: "vuln"
  timeout: 5m0s

database:
  type: internal
  internal:
    image:
      repository: goharbor/harbor-db
      tag: *tagVersion
    shmSizeLimit: 512Mi
  maxIdleConns: 100
  maxOpenConns: 900

redis:
  type: internal
  internal:
    image:
      repository: goharbor/redis-photon
      tag: *tagVersion
    jobserviceDatabaseIndex: "1"
    registryDatabaseIndex: "2"
    trivyAdapterIndex: "5"

exporter:
  image:
    repository: goharbor/harbor-exporter
    tag: *tagVersion
  serviceAccountName: ""
  automountServiceAccountToken: false
  replicas: 1
  revisionHistoryLimit: 10
  cacheDuration: 23
  cacheCleanInterval: 14400
