nameOverride: ""
namespaceOverride: ""
ollama:
  name: "ollama"
  enabled: true
  fullnameOverride: ""
  ollama:
    gpu:
      enabled: true
      type: nvidia
    models:
      pull: []
      run: []
  image:
    tag: "0.9.2"
  extraEnv:
  - name: "OLLAMA_NUM_PARALLEL"
    value: "1"
  - name: "OLLAMA_FLASH_ATTENTION"
    value: "1"
  - name: "OLLAMA_DEBUG"
    value: "1"
  - name: "OLLAMA_MAX_LOADED_MODELS"
    value: "1"
  runtimeClassName: nvidia
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          # On discrete-GPU based systems NFD adds the following label where 10de is the NVIDIA PCI vendor ID
          - key: feature.node.kubernetes.io/pci-0300_10de.present
            operator: In
            values:
            - "true"
        - matchExpressions:
          # We allow a GPU deployment to be forced by setting the following label to "true"
          - key: "nvidia.com/gpu.present"
            operator: In
            values:
            - "true"
  persistentVolume:
    enabled: true
    size: 100Gi
    storageClass: ceph-rbd-retain
    accessModes:
    - ReadWriteOnce

pipelines:
  enabled: false

# -- A list of Ollama API endpoints. These can be added in lieu of automatically installing the Ollama Helm chart, or in addition to it.
# ollamaUrls: [ "https://ollama.cloud.danmanners.com" ]
clusterDomain: cluster.local

image:
  repository: ghcr.io/open-webui/open-webui
  tag: ""
  pullPolicy: "IfNotPresent"

serviceAccount:
  enable: true

managedCertificate:
  enabled: false

ingress:
  enabled: false

persistence:
  enabled: true
  size: 20Gi
  accessModes:
  - ReadWriteOnce
  storageClass: ceph-rbd-retain
  provider: local

# -- Service values to expose Open WebUI pods to cluster
service:
  type: ClusterIP
  port: 80
  containerPort: 8080

# -- Enables the use of OpenAI APIs
enableOpenaiApi: false

# hostAliases:
# - ip: "172.31.0.11"
#   hostnames:
#   - "keycloak.cloud.danmanners.com"

sso:
  enabled: false
  enableSignup: true
  mergeAccountsByEmail: true
  enableRoleManagement: false
  enableGroupManagement: true

  oidc:
    enabled: false
    clientId: aiml-open-webui
    clientExistingSecret: open-webui-oidc-secret
    clientExistingSecretKey: clientSecret
    providerUrl: https://keycloak.cloud.danmanners.com/realms/master/.well-known/openid-configuration
    providerName: "SSO"
    scopes: "openid email profile"

  roleManagement:
    rolesClaim: "roles"
    allowedRoles: ""
    adminRoles: ""

  groupManagement:
    groupsClaim: "groups"

  trustedHeader:
    enabled: false
    emailHeader: ""
    nameHeader: ""

# -- Extra resources to deploy with Open WebUI
extraResources:
# Create the public Ollama Web UI service
- apiVersion: v1
  kind: Service
  metadata:
    name: ollama-extname
    annotations:
      external-dns.alpha.kubernetes.io/hostname: ollama.cloud.danmanners.com
      external-dns.alpha.kubernetes.io/ttl: "300"
  spec:
    type: ExternalName
    externalName: unifi-home.homelab.danmanners.com
# Create the Gateway API HTTPRoute for the public Ollama Web UI service
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    name: aiml
    namespace: aiml
    annotations:
      external-dns.alpha.kubernetes.io/hostname: chat.capi-core.homelab.danmanners.com
      external-dns.alpha.kubernetes.io/ingress-hostname-source: annotation-only
  spec:
    hostnames:
    - chat.capi-core.homelab.danmanners.com
    parentRefs:
    - kind: Gateway
      group: gateway.networking.k8s.io
      name: gwapi
      namespace: default
      sectionName: https
    rules: &openwebui-rules
      - backendRefs:
        - group: ""
          kind: Service
          name: open-webui
          port: 80
          weight: 1
        matches:
        - path:
            type: PathPrefix
            value: /
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    name: aiml-cloud
    namespace: aiml
    annotations:
      external-dns.alpha.kubernetes.io/controller: "false"
      external-dns.alpha.kubernetes.io/hostname: ollama.cloud.danmanners.com
      external-dns.alpha.kubernetes.io/target: unifi-home.homelab.danmanners.com
      external-dns.alpha.kubernetes.io/ingress-hostname-source: annotation-only
      external-dns.alpha.kubernetes.io/ttl: "300"
  spec:
    hostnames:
    - ollama.cloud.danmanners.com
    parentRefs:
    - kind: Gateway
      group: gateway.networking.k8s.io
      name: gwapi
      namespace: default
      sectionName: https-cloud
    rules: *openwebui-rules

databaseUrl: "postgresql://ollama:657429c7&1d97&4bdc&b2c6&3809a3bd68a0@open-webui-postgres:5432/open-webui" # trufflehog:ignore
# -- Postgresql configuration (see. https://artifacthub.io/packages/helm/bitnami/postgresql)
postgresql:
  global:
    defaultStorageClass: ceph-rbd-retain
  enabled: true
  fullnameOverride: open-webui-postgres
  architecture: standalone
  auth:
    database: open-webui
    existingSecret: ollama-db-creds
    password: "657429c7&1d97&4bdc&b2c6&3809a3bd68a0" # trufflehog:ignore
    username: ollama
    secretKeys:
      adminPasswordKey: POSTGRES_ADMIN_PASSWORD
      userPasswordKey: POSTGRES_USER_PASSWORD
  primary:
    persistence:
      size: 4Gi
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 1Gi
        cpu: 1000m

extraEnvVars:
- name: "POSTGRES_ADMIN_PASSWORD"
  valueFrom:
    secretKeyRef:
      name: ollama-db-creds
      key: POSTGRES_ADMIN_PASSWORD
- name: "POSTGRES_USER_PASSWORD"
  valueFrom:
    secretKeyRef:
      name: ollama-db-creds
      key: POSTGRES_USER_PASSWORD
